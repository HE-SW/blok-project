{"version":3,"file":"static/js/146.148352ef.chunk.js","mappings":"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","sources":["components/Blocks/Simple/Nav/SettingBlock.tsx","components/Card/Card.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { TextInput, CustomSelect, ImgInput } from '../../../Input';\r\nimport { Card } from '../../../Card/Card';\r\nimport * as icon from '../../../../icons';\r\nimport { getStyleOptions, getCurrentStyleOption } from '../../blockHelper';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  updateBlockData,\r\n  updateTemplate,\r\n  selectBlockById,\r\n} from '../../../../reducers/SiteReducer';\r\nimport type { RootState } from '../../../../reducers/store';\r\nimport { SettingBlockProps, StyleData } from '../../blockValidator';\r\nimport axios from 'axios';\r\n\r\nfunction SettingBlock({ blockId, onRemove }: SettingBlockProps) {\r\n  const { id, template, data, isCardOpened } = useSelector((state: RootState) =>\r\n    selectBlockById(state, blockId)\r\n  );\r\n  let styleOptions = getStyleOptions(template);\r\n  let currentStyle = getCurrentStyleOption(template);\r\n  const dispatch = useDispatch();\r\n\r\n  const [style, setStyle] = useState(currentStyle);\r\n  const [Logo, setLogo] = useState(data.logoText?.value);\r\n  const [image, setImage] = useState<any>(data.logoImage);\r\n\r\n  async function imgHandler(data: any) {\r\n    const formData = new FormData();\r\n    formData.append('file', data);\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    };\r\n    const result = await axios.post('/api/site/image', formData, config);\r\n\r\n    setImage(result.data);\r\n    dispatch(\r\n      updateBlockData({\r\n        blockId: id,\r\n        field: 'image',\r\n        value: {\r\n          src: result.data,\r\n          alt: result.data,\r\n        },\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        title=\"Navbar\"\r\n        pinned\r\n        onRemove={onRemove}\r\n        icon={icon.Navbar}\r\n        isCardOpened={isCardOpened}\r\n        blockId={blockId}\r\n      >\r\n        <CustomSelect\r\n          title=\"스타일\"\r\n          required={true}\r\n          guideline=\"스타일를 선택해주세요.\"\r\n          placeholder=\"원하는 선택지를 선택해주세요\"\r\n          options={styleOptions}\r\n          onChange={(e: StyleData) => {\r\n            setStyle(e);\r\n            dispatch(updateTemplate({ blockId: id, newTemplate: e.value }));\r\n          }}\r\n          value={style}\r\n        />\r\n        <ImgInput\r\n          title=\"로고 이미지\"\r\n          guideline=\"1:1 비율의 이미지로 업로드해주세요\"\r\n          src={image?.src}\r\n          alt={image?.alt}\r\n          placeholder={image?.src}\r\n          onChange={imgHandler}\r\n        />\r\n        <TextInput\r\n          title=\"텍스트\"\r\n          required={true}\r\n          guideline=\"텍스트를 입력해주세요\"\r\n          value={Logo}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            setLogo(e.target.value);\r\n            dispatch(\r\n              updateBlockData({\r\n                blockId: id,\r\n                field: 'logoText',\r\n                value: { value: e.target.value },\r\n              })\r\n            );\r\n          }}\r\n        ></TextInput>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SettingBlock;\r\n","import styled, { css } from 'styled-components';\r\nimport * as icon from '../../icons';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleCardState } from '../../reducers/SiteReducer';\r\n\r\nexport const CardHeader = styled.div<{ isOpened: boolean }>`\r\n  background: #ffffff;\r\n  border: 1px solid #efefef;\r\n  border-radius: ${(props) =>\r\n    props.isOpened === true ? '12px 12px 0 0' : '12px'};\r\n  position: relative;\r\n  width: 100%;\r\n  height: 60px;\r\n  display: flex;\r\n  padding: 0px 24px;\r\n  box-sizing: border-box;\r\n  & * {\r\n    user-select: none;\r\n    user-drag: none;\r\n  }\r\n`;\r\n\r\nconst CardContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst CardBoby = styled.div<{ isOpened: boolean }>`\r\n  background: #ffffff;\r\n  border: 1px solid #efefef;\r\n  border-top: none;\r\n  padding: 24px;\r\n  box-sizing: border-box;\r\n  border-radius: 0 0 12px 12px;\r\n  div:first-child {\r\n    margin-top: 0px;\r\n  }\r\n`;\r\n\r\nconst HeaderIcon = styled.img<{ pinned: boolean }>`\r\n  width: 22px;\r\n  height: 22px;\r\n  margin: auto 0;\r\n  &:hover {\r\n    cursor: ${(props) => (props.pinned ? 'not-allowed' : 'grab')};\r\n  }\r\n  &:active {\r\n    cursor: ${(props) => (props.pinned ? 'not-allowed' : 'grabbing')};\r\n  }\r\n`;\r\n\r\nconst TitleBox = styled.div`\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  display: flex;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  margin: auto 0;\r\n  margin-left: 16px;\r\n  padding-top: 2px;\r\n`;\r\n\r\nconst TitleIcon = styled.img`\r\n  width: 24px;\r\n  height: 24px;\r\n  margin: auto 0;\r\n`;\r\nconst Trash = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  padding: 10px;\r\n  right: 64px;\r\n  top: 9px;\r\n  transition: opacity 0.3s;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n`;\r\nconst Down = styled.img<{ isOpened: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  padding: 10px;\r\n  right: 22px;\r\n  top: 9px;\r\n  transition: transform 0.4s;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  ${(props) =>\r\n    props.isOpened &&\r\n    css`\r\n      transform: rotate(180deg);\r\n    `}\r\n`;\r\n\r\ninterface Cardprops {\r\n  title: string;\r\n  children: any;\r\n  pinned?: boolean;\r\n  icon?: string;\r\n  onRemove: (event: React.MouseEvent<HTMLElement>) => void;\r\n  isCardOpened?: boolean;\r\n  blockId?: string;\r\n}\r\n\r\nexport const Card = (props: Cardprops) => {\r\n  const dispatch = useDispatch();\r\n  const isCardOpened = props.isCardOpened ?? false;\r\n  return (\r\n    <CardContainer>\r\n      <CardHeader isOpened={isCardOpened}>\r\n        <HeaderIcon\r\n          pinned={props.pinned ? true : false}\r\n          src={props.pinned ? icon.Pin : icon.Movable}\r\n          alt=''\r\n        />\r\n        <TitleBox>\r\n          <TitleIcon src={props.icon} alt='' />\r\n          <Title>{props.title}</Title>\r\n        </TitleBox>\r\n        <Trash src={icon.Trash} alt='' onClick={props.onRemove} />\r\n        <Down\r\n          src={icon.Down}\r\n          alt=''\r\n          isOpened={isCardOpened}\r\n          onClick={() => {\r\n            dispatch(toggleCardState(props.blockId ?? ''));\r\n          }}\r\n        />\r\n      </CardHeader>\r\n      {isCardOpened && (\r\n        <CardBoby isOpened={isCardOpened}>{props.children}</CardBoby>\r\n      )}\r\n    </CardContainer>\r\n  );\r\n};\r\n"],"names":["blockId","onRemove","useSelector","state","selectBlockById","id","template","data","isCardOpened","styleOptions","getStyleOptions","currentStyle","getCurrentStyleOption","dispatch","useDispatch","useState","style","setStyle","logoText","value","Logo","setLogo","logoImage","image","setImage","formData","FormData","append","config","headers","axios","result","updateBlockData","field","src","alt","title","pinned","icon","required","guideline","placeholder","options","onChange","e","updateTemplate","newTemplate","target","CardHeader","styled","props","isOpened","CardContainer","CardBoby","HeaderIcon","TitleBox","Title","TitleIcon","Trash","Down","css","Card","onClick","toggleCardState","children"],"sourceRoot":""}