{"version":3,"file":"static/js/85.c5f419a7.chunk.js","mappings":"4PAIMA,EAAMC,EAAAA,GAAAA,IAAH,yDAiET,GAtDkBC,OAAVC,MAEW,SAACC,GAClB,IAAQD,EAAUD,OAAVC,MACFE,GAASC,EAAAA,EAAAA,QAAuB,MA2CtC,OAzCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAYH,EAAOI,QACnBC,EAAU,CACdC,OAAQ,IAAIR,EAAMS,KAAKC,OAAO,UAAW,YACzCC,MAAO,GAGLC,EAAM,IAAIZ,EAAMS,KAAKI,IAAIR,EAAWE,IAGzB,IAAIP,EAAMS,KAAKK,SAASC,UAG9BC,cACPf,EAAMA,MAAMgB,OACZ,SAAUC,EAAaC,GAErB,GAAIA,IAAWnB,EAAMS,KAAKK,SAASM,OAAOC,GAAI,CAC5C,IAAIC,EAAS,IAAItB,EAAMS,KAAKC,OAAOQ,EAAO,GAAGK,EAAGL,EAAO,GAAGM,GAGtDC,EAAS,IAAIzB,EAAMS,KAAKiB,OAAO,CACjCd,IAAKA,EACLe,SAAUL,IAIK,IAAItB,EAAMS,KAAKmB,WAAW,CACzCC,QACE,oGAEOC,KAAKlB,EAAKa,GAGrBb,EAAImB,UAAUT,OAIpBV,EAAIoB,aACH,CAAC/B,EAAMA,MAAMgB,SAGd,+BACE,SAACpB,EAAD,CAAKoC,IAAK/B,Q,UCzDVgC,EAAU,SAACC,EAAYC,GAC3B,OAAc,IAANA,EAAYD,EAAM,IAAM,MAGrBE,EAAO,SAACF,GACnB,OAAQ,IAAMA,EAAM,IAAM,MAGtBG,EAAM,GACNC,EAAYzC,EAAAA,GAAAA,IAAH,wPACO,SAACG,GAAD,OAAWA,EAAMuC,SAASC,cAC/B,SAACxC,GAAD,OAAWA,EAAMyC,QACvB,SAACzC,GAAD,OAAWA,EAAMuC,SAASG,WAW/BC,EAAY9C,EAAAA,GAAAA,IAAH,+HACJ,SAACG,GAAD,OAAWA,EAAMuC,SAASK,UAGpBX,EAAQI,EAAK,IAIxBQ,EAAgBhD,EAAAA,GAAAA,IAAH,sIAIJoC,EAAQI,EAAK,IAItBS,EAAQjD,EAAAA,GAAAA,IAAH,8NAGA,SAACG,GAAD,OAAWA,EAAMuC,SAASQ,YAKpBd,EAAQI,EAAK,GACTJ,EAAQI,EAAK,IAI5BW,EAAUnD,EAAAA,GAAAA,IAAH,kOAGF,SAACG,GAAD,OAAWA,EAAMuC,SAASG,UAKpBT,EAAQI,EAAK,KACTJ,EAAQI,EAAK,KAI5BY,EAAUpD,EAAAA,GAAAA,IAAH,+KAGF,SAACG,GAAD,OAAWA,EAAMuC,SAASG,UAIpBT,EAAQI,EAAK,MAIxBa,EAAYrD,EAAAA,GAAAA,IAAH,uPAOFoC,EAAQI,EAAK,KACZJ,EAAQI,EAAK,KACNJ,EAAQI,EAAK,KAI5Bc,EAActD,EAAAA,GAAAA,IAAH,4IAIJuC,EAAK,KACJA,EAAK,MAIJ,SAASgB,EAAUpD,GAAwB,IAAD,YAC/CqD,EAAkBrD,EAAlBqD,QAASC,EAAStD,EAATsD,KACjB,GAAiCC,EAAAA,EAAAA,IAAgB,CAAEF,QAAAA,EAASC,KAAAA,IAApDf,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,KAAMe,EAAxB,EAAwBA,KAExB,OACE,+BACE,UAAClB,EAAD,CAAWC,SAAUA,EAAUE,KAAMA,EAAMgB,GAAE,UAAED,EAAKE,gBAAP,QAAmB,GAAhE,WACG,UAAAF,EAAKG,cAAL,eAAa3C,SACZ,SAAC2B,EAAD,CAAWJ,SAAUA,EAArB,SAAgCiB,EAAKG,OAAO3C,SAE9C,UAAC6B,EAAD,YACG,UAAAW,EAAKI,aAAL,eAAY5C,SACX,SAAC8B,EAAD,CAAOP,SAAUA,EAAjB,SAA4BiB,EAAKI,MAAM5C,SAExC,UAAAwC,EAAKK,eAAL,eAAc7C,SACb,SAACgC,EAAD,CAAST,SAAUA,EAAnB,SAA8BiB,EAAKK,QAAQ7C,SAE5C,UAAAwC,EAAKM,eAAL,eAAc9C,SACb,UAACiC,EAAD,CAASV,SAAUA,EAAnB,WACE,SAACW,EAAD,CAAWa,IAAKC,EAAAA,GAAezB,SAAUA,IACxCiB,EAAKM,QAAQ9C,aAIpB,SAACmC,EAAD,WACE,SAAC,EAAD,CAAKnD,MAAOwD,EAAKK,aAEnB,SAAChB,EAAD,WACG,UAAAW,EAAKS,YAAL,eAAWjD,SACV,SAACiC,EAAD,CAASV,SAAUA,EAAnB,SAA8BiB,EAAKS,KAAKjD","sources":["components/Map.tsx","components/Blocks/Wedding/Map/SiteBlock.tsx"],"sourcesContent":["/* global kakao */\r\nimport React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    kakao: any;\r\n  }\r\n}\r\n\r\nconst { kakao } = window as any;\r\n\r\nexport const Map = (props: any) => {\r\n  const { kakao } = window;\r\n  const mapRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const container = mapRef.current;\r\n    const options = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      level: 3,\r\n    };\r\n    // 지도를 생성합니다\r\n    var map = new kakao.maps.Map(container, options);\r\n\r\n    // 주소-좌표 변환 객체를 생성합니다\r\n    var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    // 주소로 좌표를 검색합니다\r\n    geocoder.addressSearch(\r\n      props.props.value,\r\n      function (result: any, status: any) {\r\n        // 정상적으로 검색이 완료됐으면\r\n        if (status === kakao.maps.services.Status.OK) {\r\n          var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n          // 결과값으로 받은 위치를 마커로 표시합니다\r\n          var marker = new kakao.maps.Marker({\r\n            map: map,\r\n            position: coords,\r\n          });\r\n\r\n          // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n          var infowindow = new kakao.maps.InfoWindow({\r\n            content:\r\n              '<div style=\"width:150px;text-align:center;padding:6px 0;\">결혼식 장소</div>',\r\n          });\r\n          infowindow.open(map, marker);\r\n\r\n          // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n          map.setCenter(coords);\r\n        }\r\n      }\r\n    );\r\n    map.relayout();\r\n  }, [props.props.value]);\r\n\r\n  return (\r\n    <>\r\n      <Div ref={mapRef}></Div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import styled from 'styled-components';\r\nimport { SiteBlockProps, ColorSet } from '../../blockValidator';\r\nimport { SiteBlockByType } from '../../../../reducers/HostReducer';\r\nimport Map from '../../../Map';\r\nimport { useAppSelector } from '../../../../reducers';\r\nimport * as icons from '../../../../icons';\r\n\r\nconst RemtoVw = (px: number, rem: number) => {\r\n  return (rem * 100 * px) / 550 + 'vw';\r\n};\r\n\r\nexport const PxVw = (px: number) => {\r\n  return (100 * px) / 550 + 'vw';\r\n};\r\n\r\nconst REM = 16;\r\nconst Container = styled.div<{ colorSet: ColorSet; font: string }>`\r\n  background-color: ${(props) => props.colorSet.background};\r\n  font-family: ${(props) => props.font};\r\n  color: ${(props) => props.colorSet.surface};\r\n\r\n  max-width: 550px;\r\n  padding: 50px 10px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MainTitle = styled.div<{ colorSet: ColorSet }>`\r\n  color: ${(props) => props.colorSet.primary};\r\n  font-size: 5rem;\r\n  @media screen and (max-width: 550px) {\r\n    font-size: ${RemtoVw(REM, 5)};\r\n  }\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  vertical-align: middle;\r\n  padding: 3rem;\r\n  @media screen and (max-width: 550px) {\r\n    padding: ${RemtoVw(REM, 3)};\r\n  }\r\n`;\r\n\r\nconst Venue = styled.div<{ colorSet: ColorSet }>`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: ${(props) => props.colorSet.secondary};\r\n  text-align: center;\r\n  margin-bottom: 1rem;\r\n\r\n  @media screen and (max-width: 550px) {\r\n    font-size: ${RemtoVw(REM, 2)};\r\n    margin-bottom: ${RemtoVw(REM, 1)};\r\n  }\r\n`;\r\n\r\nconst Address = styled.div<{ colorSet: ColorSet }>`\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: ${(props) => props.colorSet.surface};\r\n  text-align: center;\r\n  margin-bottom: 0.3rem;\r\n\r\n  @media screen and (max-width: 550px) {\r\n    font-size: ${RemtoVw(REM, 1.5)};\r\n    margin-bottom: ${RemtoVw(REM, 0.3)};\r\n  }\r\n`;\r\n\r\nconst Contact = styled.div<{ colorSet: ColorSet }>`\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: ${(props) => props.colorSet.surface};\r\n  text-align: center;\r\n\r\n  @media screen and (max-width: 550px) {\r\n    font-size: ${RemtoVw(REM, 1.5)};\r\n  }\r\n`;\r\n\r\nconst PhoneIcon = styled.img<{ colorSet: ColorSet }>`\r\n  width: 1.2rem;\r\n  height: 1.2rem;\r\n  padding-right: 0.5rem;\r\n  filter: opacity(0.5) drop-shadow(0 0 0 #ececec);\r\n\r\n  @media screen and (max-width: 550px) {\r\n    width: ${RemtoVw(REM, 1.2)};\r\n    height: ${RemtoVw(REM, 1.2)};\r\n    padding-right: ${RemtoVw(REM, 0.5)};\r\n  }\r\n`;\r\n\r\nconst MapWidth100 = styled.div`\r\n  width: 500px;\r\n  height: 350px;\r\n  @media screen and (max-width: 550px) {\r\n    width: ${PxVw(500)};\r\n    height: ${PxVw(350)};\r\n  }\r\n`;\r\n\r\nexport default function SiteBlock(props: SiteBlockProps) {\r\n  const { blockId, type } = props;\r\n  const { colorSet, font, data } = SiteBlockByType({ blockId, type });\r\n\r\n  return (\r\n    <>\r\n      <Container colorSet={colorSet} font={font} id={data.navTitle ?? ''}>\r\n        {data.header?.value && (\r\n          <MainTitle colorSet={colorSet}>{data.header.value}</MainTitle>\r\n        )}\r\n        <TextContainer>\r\n          {data.venue?.value && (\r\n            <Venue colorSet={colorSet}>{data.venue.value}</Venue>\r\n          )}\r\n          {data.address?.value && (\r\n            <Address colorSet={colorSet}>{data.address.value}</Address>\r\n          )}\r\n          {data.contact?.value && (\r\n            <Contact colorSet={colorSet}>\r\n              <PhoneIcon src={icons.Contact} colorSet={colorSet} />\r\n              {data.contact.value}\r\n            </Contact>\r\n          )}\r\n        </TextContainer>\r\n        <MapWidth100>\r\n          <Map props={data.address} />\r\n        </MapWidth100>\r\n        <TextContainer>\r\n          {data.body?.value && (\r\n            <Contact colorSet={colorSet}>{data.body.value}</Contact>\r\n          )}\r\n        </TextContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Div","styled","window","kakao","props","mapRef","useRef","useEffect","container","current","options","center","maps","LatLng","level","map","Map","services","Geocoder","addressSearch","value","result","status","Status","OK","coords","y","x","marker","Marker","position","InfoWindow","content","open","setCenter","relayout","ref","RemtoVw","px","rem","PxVw","REM","Container","colorSet","background","font","surface","MainTitle","primary","TextContainer","Venue","secondary","Address","Contact","PhoneIcon","MapWidth100","SiteBlock","blockId","type","SiteBlockByType","data","id","navTitle","header","venue","address","contact","src","icons","body"],"sourceRoot":""}