{"version":3,"file":"static/js/836.278ec871.chunk.js","mappings":"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","sources":["components/Blocks/Simple/Feature/RightImg/SiteBlock.tsx","components/Blocks/Simple/Feature/SiteBlock.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { SiteBlockProps, ColorSet } from '../../../blockValidator';\r\nimport { ImgDiv } from '../SiteBlock';\r\nimport { SiteBlockByType } from '../../../../../reducers/HostReducer';\r\n\r\nconst Container = styled.div<{ colorSet: ColorSet; font: string }>`\r\n  background-color: ${(props) => props.colorSet.background};\r\n  font-family: ${(props) => props.font};\r\n  color: ${(props) => props.colorSet.surface};\r\n\r\n  padding: 100px 10px;\r\n  margin: 0 auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 300px;\r\n  padding-left: 10px;\r\n  padding-top: 30px;\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    width: 27vw;\r\n  }\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  vertical-align: middle;\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst Caption = styled.div<{ colorSet: ColorSet }>`\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: ${(props) => props.colorSet.primary};\r\n  margin-bottom: 10px;\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    font-size: 1.4vw;\r\n    margin-bottom: 1vw;\r\n  }\r\n`;\r\n\r\nconst Header = styled.span`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: black;\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    font-size: 3vw;\r\n  }\r\n`;\r\n\r\nconst Body = styled.div<{ colorSet: ColorSet }>`\r\n  color: ${(props) => props.colorSet.surface};\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    font-size: 1.3vw;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button<{ colorSet: ColorSet }>`\r\n  background-color: ${(props) => props.colorSet.primary};\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: 0;\r\n  border-radius: 7px;\r\n  font-size: 1rem;\r\n  margin-top: 20px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    font-size: 1.4vw;\r\n    padding: 1vw 2vw;\r\n    margin-top: 1.2vw;\r\n  }\r\n`;\r\n\r\nfunction highlightHandler(header: string, keyword: string, colorSet: ColorSet) {\r\n  const HeaderHighlight = styled.span`\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    color: ${colorSet.primary};\r\n\r\n    @media screen and (max-width: 1120px) {\r\n      font-size: 2.8vw;\r\n    }\r\n  `;\r\n\r\n  let result = [];\r\n\r\n  if (header.includes(keyword)) {\r\n    const splitedByKeyword = header.split(keyword);\r\n    for (let i = 0; i < splitedByKeyword.length - 1; i++) {\r\n      result.push(\r\n        <>\r\n          <Header>{splitedByKeyword[i]}</Header>\r\n          <HeaderHighlight>{keyword}</HeaderHighlight>\r\n        </>\r\n      );\r\n    }\r\n    result.push(\r\n      <Header>{splitedByKeyword[splitedByKeyword.length - 1]}</Header>\r\n    );\r\n  } else {\r\n    result.push(<Header>{header}</Header>);\r\n  }\r\n\r\n  return result.map((item) => item);\r\n}\r\n\r\nexport default function SiteBlock(props: SiteBlockProps) {\r\n  const { blockId, type } = props;\r\n  const { colorSet, font, data } = SiteBlockByType({ blockId, type });\r\n\r\n  function buttonHandler() {\r\n    window.location.href = data.button?.url ?? '';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container colorSet={colorSet} font={font} id={data.navTitle ?? ''}>\r\n        <TextContainer>\r\n          {data.caption?.value && (\r\n            <Caption colorSet={colorSet}>{data.caption.value}</Caption>\r\n          )}\r\n          <div>\r\n            {data.header?.value &&\r\n              (data.headerHighlight ? (\r\n                highlightHandler(\r\n                  data.header.value,\r\n                  data.headerHighlight.value,\r\n                  colorSet\r\n                )\r\n              ) : (\r\n                <Header>{data.header.value}</Header>\r\n              ))}\r\n          </div>\r\n          {data.body?.value && (\r\n            <Body colorSet={colorSet}>{data.body.value}</Body>\r\n          )}\r\n          {data.button?.title && (\r\n            <Button\r\n              colorSet={colorSet}\r\n              color={colorSet.primary}\r\n              onClick={buttonHandler}\r\n            >\r\n              {data.button.title}\r\n            </Button>\r\n          )}\r\n        </TextContainer>\r\n        {data.image?.src ? (\r\n          <Img src={data.image.src} alt={data.image.alt ?? ''} />\r\n        ) : (\r\n          <ImgDiv style={{ marginLeft: '20px' }}>\r\n            여기에 이미지가 보여집니다.\r\n          </ImgDiv>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { SiteBlockProps, ColorSet } from '../../blockValidator';\r\nimport { SiteBlockByType } from '../../../../reducers/HostReducer';\r\n\r\nconst Container = styled.div<{ colorSet: ColorSet; font: string }>`\r\n  background-color: ${(props) => props.colorSet.background};\r\n  font-family: ${(props) => props.font};\r\n  color: ${(props) => props.colorSet.surface};\r\n\r\n  padding: 100px 10px;\r\n  margin: 0 auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ImgDiv = styled.div`\r\n  width: 300px;\r\n  height: 200px;\r\n  background-color: #efefef;\r\n  text-align: center;\r\n  line-height: 200px;\r\n  @media screen and (max-width: 1120px) {\r\n    width: 400px;\r\n    padding-right: 0;\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 300px;\r\n  padding-right: 10px;\r\n  padding-top: 30px;\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    width: 27vw;\r\n  }\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  vertical-align: middle;\r\n  padding: 40px;\r\n`;\r\n\r\nconst Caption = styled.div<{ colorSet: ColorSet }>`\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: ${(props) => props.colorSet.primary};\r\n  margin-bottom: 10px;\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    font-size: 1.4vw;\r\n    margin-bottom: 1vw;\r\n  }\r\n`;\r\n\r\nconst Header = styled.span`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: black;\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    font-size: 3vw;\r\n  }\r\n`;\r\n\r\nconst Body = styled.div<{ colorSet: ColorSet }>`\r\n  color: ${(props) => props.colorSet.surface};\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    font-size: 1.3vw;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button<{ colorSet: ColorSet }>`\r\n  background-color: ${(props) => props.colorSet.primary};\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: 0;\r\n  border-radius: 7px;\r\n  font-size: 1rem;\r\n  margin-top: 20px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    font-size: 1.4vw;\r\n    padding: 1vw 2vw;\r\n    margin-top: 1.2vw;\r\n  }\r\n`;\r\nconst HeaderHighlight = styled.span<{ colorSet: ColorSet }>`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: ${(props) => props.colorSet.primary};\r\n\r\n  @media screen and (max-width: 1120px) {\r\n    font-size: 2.8vw;\r\n  }\r\n`;\r\n\r\nfunction highlightHandler(header: string, keyword: string, colorSet: ColorSet) {\r\n  let result = [];\r\n\r\n  if (header.includes(keyword)) {\r\n    const splitedByKeyword = header.split(keyword);\r\n    for (let i = 0; i < splitedByKeyword.length - 1; i++) {\r\n      result.push(\r\n        <>\r\n          <Header key={`${i}-keyword`}>{splitedByKeyword[i]}</Header>\r\n          <HeaderHighlight key={`${i}-HeaderHighlight`} colorSet={colorSet}>\r\n            {keyword}\r\n          </HeaderHighlight>\r\n        </>\r\n      );\r\n    }\r\n    result.push(\r\n      <Header key={`${keyword}-keyword`}>\r\n        {splitedByKeyword[splitedByKeyword.length - 1]}\r\n      </Header>\r\n    );\r\n  } else {\r\n    result.push(<Header key={`${keyword}-header`}>{header}</Header>);\r\n  }\r\n\r\n  return result.map((item) => item);\r\n}\r\n\r\nexport default function SiteBlock(props: SiteBlockProps) {\r\n  const { blockId, type } = props;\r\n  const { colorSet, font, data } = SiteBlockByType({ blockId, type });\r\n\r\n  function buttonHandler() {\r\n    window.location.href = data.button?.url ? data.button.url : '';\r\n  }\r\n  return (\r\n    <>\r\n      <Container colorSet={colorSet} font={font} id={data.navTitle ?? ''}>\r\n        {data.image?.src ? (\r\n          <Img src={data.image.src} alt={data.image.alt ?? ''} />\r\n        ) : (\r\n          <ImgDiv style={{ marginRight: '20px' }}>\r\n            여기에 이미지가 보여집니다.\r\n          </ImgDiv>\r\n        )}\r\n        <TextContainer>\r\n          {data.caption?.value && (\r\n            <Caption colorSet={colorSet}>{data.caption.value}</Caption>\r\n          )}\r\n          <div>\r\n            {data.header?.value &&\r\n              (data.headerHighlight ? (\r\n                highlightHandler(\r\n                  data.header.value,\r\n                  data.headerHighlight.value,\r\n                  colorSet\r\n                )\r\n              ) : (\r\n                <Header>{data.header.value}</Header>\r\n              ))}\r\n          </div>\r\n          {data.body?.value && (\r\n            <Body colorSet={colorSet}>{data.body.value}</Body>\r\n          )}\r\n          {data.button?.title && (\r\n            <Button\r\n              colorSet={colorSet}\r\n              color={colorSet.primary}\r\n              onClick={buttonHandler}\r\n            >\r\n              {data.button.title}\r\n            </Button>\r\n          )}\r\n        </TextContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Container","styled","props","colorSet","background","font","surface","Img","TextContainer","Caption","primary","Header","Body","Button","highlightHandler","header","keyword","HeaderHighlight","result","includes","splitedByKeyword","split","i","length","push","map","item","SiteBlock","blockId","type","SiteBlockByType","data","id","navTitle","caption","value","headerHighlight","body","button","title","color","onClick","window","location","href","url","image","src","alt","ImgDiv","style","marginLeft","marginRight"],"sourceRoot":""}